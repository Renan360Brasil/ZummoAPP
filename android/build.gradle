// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "36.0.0"
        minSdkVersion = 21
        // maxSdkVersion = 28
        compileSdkVersion = 34
        targetSdkVersion = 34
        ndkVersion = "21.4.7075529"
        supportLibVersion = "28.0.0"
        kotlinVersion = "1.9.0" // <- Adicionado aqui!
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        // classpath("com.android.tools.build:gradle:4.2.2")
        classpath("com.android.tools.build:gradle:8.2.2")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion") // <- usa a variÃ¡vel
        // classpath('org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.0')
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }

        google()
        maven { url 'https://www.jitpack.io' }
    }
}

subprojects { subproject ->
    afterEvaluate {
        if (subproject.plugins.hasPlugin('com.android.library') || subproject.plugins.hasPlugin('com.android.application')) {
            if (!subproject.android.hasProperty('namespace')) {
                def fallbackNamespace = "com.br.app.zummo.${subproject.name}"
                subproject.android.namespace = fallbackNamespace
            }
            if (subproject.hasProperty("android") && subproject.android.hasProperty("buildFeatures")) {
                subproject.android.buildFeatures.buildConfig = true
            }
        }

        if (subproject.plugins.hasPlugin('org.jetbrains.kotlin.android') ||
            subproject.plugins.hasPlugin('org.jetbrains.kotlin.jvm') ||
            subproject.plugins.hasPlugin('kotlin')) {
            subproject.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
                kotlinOptions {
                    jvmTarget = "1.8"
                }
            }
        }
    }
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.jetbrains.kotlin') {
                details.useVersion "1.9.0"
            }
        }
    }
}
